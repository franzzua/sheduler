// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sheduler.Migrations;
using Sheduler.Storage.Db;

#nullable disable

namespace Sheduler.Migrations.Migrations
{
    [DbContext(typeof(ScheduleContext))]
    [Migration("20240918144440_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Sheduler.Migrations.InvokeEfEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ScheduleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId")
                        .IsUnique();

                    b.ToTable("Invokes");
                });

            modelBuilder.Entity("Sheduler.Migrations.ScheduleEfEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Sheduler.Migrations.TaskEfEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("CronExpression")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastInvocation")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ScheduleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Sheduler.Migrations.InvokeEfEntity", b =>
                {
                    b.HasOne("Sheduler.Migrations.ScheduleEfEntity", "Schedule")
                        .WithOne("Invoke")
                        .HasForeignKey("Sheduler.Migrations.InvokeEfEntity", "ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Sheduler.Migrations.TaskEfEntity", b =>
                {
                    b.HasOne("Sheduler.Migrations.ScheduleEfEntity", "Schedule")
                        .WithMany("Tasks")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Sheduler.Migrations.ScheduleEfEntity", b =>
                {
                    b.Navigation("Invoke");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
